package main

import "fmt"

// 位运算符: 建立在二进制上
func main() {
	a := 60 // 60: 0011 1100
	b := 13 // 13: 0000 1101
	// & : 按位与 -- 对位都为 1，结果才是 1， 否则为 0
	c := a & b // 12: 0000 1100
	fmt.Printf("%T, %d\n", c, c)

	// | : 按位或 -- 对位有一个 1， 结果为 1， 否则为0
	d := a | b // 61: 0011 1101
	fmt.Printf("%T, %d\n", d, d)

	// ^ : 按位异或 --不同为 1，相同为 0
	e := a ^ b // 49: 0011 0001
	fmt.Printf("%T, %d", e, e)

	//	<< : 左移运算符 将二进制字符左移n位，相当于乘以2的n次方
	l := b << 2 // 52: 0011 0100
	fmt.Printf("%T, %d, %b\n", l, l, l)
	//	>> : 右移运算符 将二进制字符右移n位，相当于除以2的n次方
	r := b >> 2 // 3: 0011
	fmt.Printf("%T, %d, %b\n", r, r, r)
}
